---
import DefaultLayout from '@layouts/Default.astro';
import { Markdown } from 'astro/components';
import { toKebabCase } from '../../../lib/utils';

export async function getStaticPaths() {
    // Each post must map to an array of objects containing:
    // { params: { box: '', index: '', slug: '' } }
    // This is how dynamic routing works in Astro.
    const boxesPosts = await Astro.glob('../../../content/**/*.md')

    const paths = boxesPosts.map((post) => {
        return {
            params: {
                box: toKebabCase(post.frontmatter.box.title),
                index: post.frontmatter.index.toString(),
            },
            props: { post }
        }
    })

    return paths;
}

const { post } = Astro.props;
const title = `${post.frontmatter.title} | Secret Boxes`

console.log(await post.default());
---
<DefaultLayout title={title}>
    <h2 class="font-display text-h2">{post.frontmatter.box.title}</h2>
    <p>{post.frontmatter.box.description}</p>

    <!-- This is a lotti animation -->
    <img src={post.frontmatter.box.image} alt={`Illustration for ${post.frontmatter.box.title} box`}>

    <!-- Need a BoxPostProgressBar component that knows the number of posts -->
    <!-- related to a particular box and the titles of each of those posts -->

    <div>
        <div>{post.frontmatter.index}</div>
        <p>{post.frontmatter.title}</p> 
        <p>{post.frontmatter.description}</p>
    </div>
    
    <!-- Below should be the rest of the markdown content-->
    <post.Content></post.Content>
</DefaultLayout>