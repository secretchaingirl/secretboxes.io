---
import DefaultLayout from '@layouts/Default.astro';
import Animation from '@components/Animation.svelte';
import PostCountIndicator from '@components/PostCountIndicator.svelte';
import MarkdownButtonControls from '@components/MarkdownButtonControls.svelte';
import { toKebabCase } from '../../../lib/utils';
import { BoxPostFrontmatter } from '../../../lib/Boxes';

import '../../../styles/global.css';

const posts = await Astro.glob<BoxPostFrontmatter>('../../../content/**/*.md');

export async function getStaticPaths() {
    const boxesPosts = await Astro.glob('../../../content/**/*.md')

    const paths = boxesPosts.map((post) => {
        return {
            params: {
                box: toKebabCase(post.frontmatter.box.title),
                title: toKebabCase(post.frontmatter.title),
            },
            props: { post }
        }
    })

    return paths;
}

const { post } = Astro.props;
const title = `${post.frontmatter.title} | Secret Boxes`
const postsByBox = posts.filter(p => p.frontmatter.box.title === post.frontmatter.box.title);
const sortedPosts = postsByBox.sort((a, b) => (a.frontmatter.index > b.frontmatter.index) ? 1 : -1)
const boxTitle = post.frontmatter.box.title;
---
<DefaultLayout title={title}>
    <div class="mx-6 lg:w-1/2 lg:mx-auto mt-8 lg:mt-24">
        <div class="flex flex-row lg:w-5/6 lg:mx-auto items-center lg:mb-28">
            <div class="w-9/12 lg:w-[65%]">
                <h2 class="font-display text-h2 mb-5 dark:text-dark-primary">{post.frontmatter.box.title}</h2>
                <p class="dark:text-dark-secondary">{post.frontmatter.box.description}</p>
            </div>
            
            <div class="flex shrink lg:grow justify-end">
                <Animation client:load id="markdown-lottie-header" path={post.frontmatter.box.lottie} styles="w-[250px] h-[170.63px]" loop={true}></Animation>
            </div>
        </div>


        <PostCountIndicator client:load posts={sortedPosts} index={post.frontmatter.index}></PostCountIndicator>
        
        <div class="flex lg:float-left items-center border border-solid border-[#e7e7e7] dark:border-dark-bg-secondary rounded-2xl p-4 my-4 lg:p-7 lg:mb-16 lg:max-w-[70%]">
            <div class="flex items-center justify-center tracking-0.5 font-semibold self-center bg-[#00a991] min-w-[35px] min-h-[35px] text-white rounded-full mr-7">
                <div>{post.frontmatter.index}</div>
            </div>
            <div class="dark:text-dark-primary">
                <p class="font-semibold tracking-0.5">{post.frontmatter.title}</p> 
                <p class="text-[#6e7191] dark:text-dark-secondary">{post.frontmatter.description}</p>
            </div>
        </div>
    
        <!-- Below should be the rest of the markdown content-->
        <div class="markdown">
            <post.Content></post.Content>

            <div class="mt-16 mb-32">
                <MarkdownButtonControls 
                    client:visible
                    index={post.frontmatter.index}
                    count={sortedPosts.length}
                    posts={posts}
                    box={boxTitle}>
                </MarkdownButtonControls>
            </div> 
        </div>
    </div>
</DefaultLayout>